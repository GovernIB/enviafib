/*
 * API REST INTERNA de Enviafib
 * Conjunt de Serveis REST de Enviafib per ser accedits des de l'interior
 *
 * OpenAPI spec version: 1.0.0
 * Contact: governdigital.enviafib@fundaciobit.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package es.caib.enviafib.apiinterna.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import es.caib.enviafib.apiinterna.client.model.Actor;
import es.caib.enviafib.apiinterna.client.model.Sign;
import es.caib.enviafib.apiinterna.client.model.SigningRequest;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * PortaFIBEvent
 */


public class PortaFIBEvent {
  @JsonProperty("eventTypeID")
  private Integer eventTypeID = null;

  @JsonProperty("version")
  private Integer version = null;

  @JsonProperty("eventDate")
  private DateTime eventDate = null;

  @JsonProperty("applicationID")
  private String applicationID = null;

  @JsonProperty("entityID")
  private String entityID = null;

  @JsonProperty("signingRequest")
  private SigningRequest signingRequest = null;

  @JsonProperty("sign")
  private Sign sign = null;

  @JsonProperty("actor")
  private Actor actor = null;

  public PortaFIBEvent eventTypeID(Integer eventTypeID) {
    this.eventTypeID = eventTypeID;
    return this;
  }

   /**
   * Get eventTypeID
   * @return eventTypeID
  **/
  @Schema(description = "")
  public Integer getEventTypeID() {
    return eventTypeID;
  }

  public void setEventTypeID(Integer eventTypeID) {
    this.eventTypeID = eventTypeID;
  }

  public PortaFIBEvent version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }

  public PortaFIBEvent eventDate(DateTime eventDate) {
    this.eventDate = eventDate;
    return this;
  }

   /**
   * Get eventDate
   * @return eventDate
  **/
  @Schema(description = "")
  public DateTime getEventDate() {
    return eventDate;
  }

  public void setEventDate(DateTime eventDate) {
    this.eventDate = eventDate;
  }

  public PortaFIBEvent applicationID(String applicationID) {
    this.applicationID = applicationID;
    return this;
  }

   /**
   * Get applicationID
   * @return applicationID
  **/
  @Schema(description = "")
  public String getApplicationID() {
    return applicationID;
  }

  public void setApplicationID(String applicationID) {
    this.applicationID = applicationID;
  }

  public PortaFIBEvent entityID(String entityID) {
    this.entityID = entityID;
    return this;
  }

   /**
   * Get entityID
   * @return entityID
  **/
  @Schema(description = "")
  public String getEntityID() {
    return entityID;
  }

  public void setEntityID(String entityID) {
    this.entityID = entityID;
  }

  public PortaFIBEvent signingRequest(SigningRequest signingRequest) {
    this.signingRequest = signingRequest;
    return this;
  }

   /**
   * Get signingRequest
   * @return signingRequest
  **/
  @Schema(description = "")
  public SigningRequest getSigningRequest() {
    return signingRequest;
  }

  public void setSigningRequest(SigningRequest signingRequest) {
    this.signingRequest = signingRequest;
  }

  public PortaFIBEvent sign(Sign sign) {
    this.sign = sign;
    return this;
  }

   /**
   * Get sign
   * @return sign
  **/
  @Schema(description = "")
  public Sign getSign() {
    return sign;
  }

  public void setSign(Sign sign) {
    this.sign = sign;
  }

  public PortaFIBEvent actor(Actor actor) {
    this.actor = actor;
    return this;
  }

   /**
   * Get actor
   * @return actor
  **/
  @Schema(description = "")
  public Actor getActor() {
    return actor;
  }

  public void setActor(Actor actor) {
    this.actor = actor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortaFIBEvent portaFIBEvent = (PortaFIBEvent) o;
    return Objects.equals(this.eventTypeID, portaFIBEvent.eventTypeID) &&
        Objects.equals(this.version, portaFIBEvent.version) &&
        Objects.equals(this.eventDate, portaFIBEvent.eventDate) &&
        Objects.equals(this.applicationID, portaFIBEvent.applicationID) &&
        Objects.equals(this.entityID, portaFIBEvent.entityID) &&
        Objects.equals(this.signingRequest, portaFIBEvent.signingRequest) &&
        Objects.equals(this.sign, portaFIBEvent.sign) &&
        Objects.equals(this.actor, portaFIBEvent.actor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventTypeID, version, eventDate, applicationID, entityID, signingRequest, sign, actor);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortaFIBEvent {\n");
    
    sb.append("    eventTypeID: ").append(toIndentedString(eventTypeID)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    eventDate: ").append(toIndentedString(eventDate)).append("\n");
    sb.append("    applicationID: ").append(toIndentedString(applicationID)).append("\n");
    sb.append("    entityID: ").append(toIndentedString(entityID)).append("\n");
    sb.append("    signingRequest: ").append(toIndentedString(signingRequest)).append("\n");
    sb.append("    sign: ").append(toIndentedString(sign)).append("\n");
    sb.append("    actor: ").append(toIndentedString(actor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
