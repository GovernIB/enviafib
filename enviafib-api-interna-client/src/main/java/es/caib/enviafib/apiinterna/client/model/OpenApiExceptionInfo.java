/*
 * Dades Obertes de EnviaFIB
 * Conjunt de Serveis REST de EnviaFIB que ofereixen Dades Obertes
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package es.caib.enviafib.apiinterna.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * OpenApiExceptionInfo
 */


public class OpenApiExceptionInfo {
  @JsonProperty("code")
  private Integer code = null;

  @JsonProperty("errorMessage")
  private String errorMessage = null;

  @JsonProperty("stackTrace")
  private String stackTrace = null;

  @JsonProperty("causeException")
  private String causeException = null;

  @JsonProperty("causeStackTrace")
  private String causeStackTrace = null;

  public OpenApiExceptionInfo code(Integer code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(required = true, description = "")
  public Integer getCode() {
    return code;
  }

  public void setCode(Integer code) {
    this.code = code;
  }

  public OpenApiExceptionInfo errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Get errorMessage
   * @return errorMessage
  **/
  @Schema(required = true, description = "")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  public OpenApiExceptionInfo stackTrace(String stackTrace) {
    this.stackTrace = stackTrace;
    return this;
  }

   /**
   * Get stackTrace
   * @return stackTrace
  **/
  @Schema(description = "")
  public String getStackTrace() {
    return stackTrace;
  }

  public void setStackTrace(String stackTrace) {
    this.stackTrace = stackTrace;
  }

  public OpenApiExceptionInfo causeException(String causeException) {
    this.causeException = causeException;
    return this;
  }

   /**
   * Get causeException
   * @return causeException
  **/
  @Schema(description = "")
  public String getCauseException() {
    return causeException;
  }

  public void setCauseException(String causeException) {
    this.causeException = causeException;
  }

  public OpenApiExceptionInfo causeStackTrace(String causeStackTrace) {
    this.causeStackTrace = causeStackTrace;
    return this;
  }

   /**
   * Get causeStackTrace
   * @return causeStackTrace
  **/
  @Schema(description = "")
  public String getCauseStackTrace() {
    return causeStackTrace;
  }

  public void setCauseStackTrace(String causeStackTrace) {
    this.causeStackTrace = causeStackTrace;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpenApiExceptionInfo openApiExceptionInfo = (OpenApiExceptionInfo) o;
    return Objects.equals(this.code, openApiExceptionInfo.code) &&
        Objects.equals(this.errorMessage, openApiExceptionInfo.errorMessage) &&
        Objects.equals(this.stackTrace, openApiExceptionInfo.stackTrace) &&
        Objects.equals(this.causeException, openApiExceptionInfo.causeException) &&
        Objects.equals(this.causeStackTrace, openApiExceptionInfo.causeStackTrace);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, errorMessage, stackTrace, causeException, causeStackTrace);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpenApiExceptionInfo {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    stackTrace: ").append(toIndentedString(stackTrace)).append("\n");
    sb.append("    causeException: ").append(toIndentedString(causeException)).append("\n");
    sb.append("    causeStackTrace: ").append(toIndentedString(causeStackTrace)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
